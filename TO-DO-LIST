import json

# Initialize an empty to-do list
todo_list = []

def display_todo_list():
    print("\n*** To-Do List ***")
    for index, task in enumerate(todo_list, start=1):
        print(f"{index}. Name: {task['name']}, Due Date: {task['due_date']}, Completed: {task['completed']}")

def add_task():
    name = input("Enter task name: ")
    due_date = input("Enter due date (YYYY-MM-DD): ")
    todo_list.append({"name": name, "due_date": due_date, "completed": False})
    print("Task added successfully!")

def mark_task_complete():
    display_todo_list()
    task_index = int(input("Enter the task number to mark as complete: ")) - 1
    if 0 <= task_index < len(todo_list):
        todo_list[task_index]["completed"] = True
        print("Task marked as complete!")
    else:
        print("Invalid task number!")

def update_task():
    display_todo_list()
    task_index = int(input("Enter the task number to update: ")) - 1
    if 0 <= task_index < len(todo_list):
        name = input("Enter new task name: ")
        due_date = input("Enter new due date (YYYY-MM-DD): ")
        todo_list[task_index]["name"] = name
        todo_list[task_index]["due_date"] = due_date
        print("Task updated successfully!")
    else:
        print("Invalid task number!")

def delete_task():
    display_todo_list()
    task_index = int(input("Enter the task number to delete: ")) - 1
    if 0 <= task_index < len(todo_list):
        deleted_task = todo_list.pop(task_index)
        print(f"Task '{deleted_task['name']}' deleted!")
    else:
        print("Invalid task number!")

def main():
    while True:
        print("\nOptions:")
        print("1. Display To-Do List")
        print("2. Add a Task")
        print("3. Mark Task as Complete")
        print("4. Update Task")
        print("5. Delete Task")
        print("6. Save and Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            display_todo_list()
        elif choice == '2':
            add_task()
        elif choice == '3':
            mark_task_complete()
        elif choice == '4':
            update_task()
        elif choice == '5':
            delete_task()
        elif choice == '6':
            with open("todo.json", "w") as file:
                json.dump(todo_list, file)
            print("To-Do List saved. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    try:
        with open("todo.json", "r") as file:
            todo_list = json.load(file)
    except FileNotFoundError:
        pass

    main()
